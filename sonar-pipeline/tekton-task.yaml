apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: sonarqube-scanner
  labels:
    apps.tanzu.vmware.com/language: "java"
    apps.tanzu.vmware.com/sonarqube: "sonarqube"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Security
    tekton.dev/tags: security
    tekton.dev/displayName: "sonarqube scanner"
    tekton.dev/platforms: "linux/amd64"
spec:
  params:
    - name: source-url
      description: Location of the source code
    - name: source-revision
      description: i.e. git hash
      default: ""

  workspaces:
    - name: custom-maven-settings
    - name: supplychain-workspace

  steps:
    - name: compile
      image: harbor.h2o-4-23332.h2o.vmware.com/tap/tools/gradle:jdk11-jammy
      workingDir: $(workspaces.supplychain-workspace.path)
      script: |
        #!/usr/bin/env bash
        set -ex
        wget -qO- $(params.source-url) | tar xvz
        cat $(workspaces.custom-maven-settings.path)/settings.xml
        ./mvnw compile -s $(workspaces.custom-maven-settings.path)/settings.xml


    - name: sonar-properties-create
      image: harbor.h2o-4-23332.h2o.vmware.com/tap/tools/gradle:jdk11-jammy
      workingDir: $(workspaces.supplychain-workspace.path)
      env:
        - name: SONAR_HOST_URL
          valueFrom:
            secretKeyRef:
              name: sonar-settings
              key: sonar-host
        - name: SONAR_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: sonar-settings
              key: sonar-token       
      script: |
        #!/usr/bin/env bash

        echo ${SONAR_HOST_URL}
        echo ${SONAR_API_TOKEN}
        echo $(params.source-url)
        echo $(params.source-revision)

        replaceValues() {
          filename=$1
          thekey=$2
          newvalue=$3
          if ! grep -R "^[#]*\s*${thekey}=.*" $filename >/dev/null; then
            echo "APPENDING because '${thekey}' not found"
            echo "" >>$filename
            echo "$thekey=$newvalue" >>$filename
          else
            echo "SETTING because '${thekey}' found already"
            sed -ir "s|^[#]*\s*${thekey}=.*|$thekey=$newvalue|" $filename
          fi
        }

        # If we were given a properties file, then use that.
        if [[ -f $(workspaces.supplychain-workspace.path)/sonar-project.properties ]]; then
          echo "using user provided sonar-project.properties file"
          cp -RL $(workspaces.supplychain-workspace.path)/sonar-project.properties $(workspaces.supplychain-workspace.path)/sonar-project.properties
        fi
        if [[ -f $(workspaces.supplychain-workspace.path)/sonar-project.properties ]]; then

          # Allow overrides from parameters passed in from the supply chain.
          if [[ -n "${SONAR_HOST_URL}" ]]; then
            replaceValues $(workspaces.supplychain-workspace.path)/sonar-project.properties sonar.host.url ${SONAR_HOST_URL}
          fi
          if [[ -n "${SONAR_API_TOKEN}" ]]; then
            replaceValues $(workspaces.supplychain-workspace.path)/sonar-project.properties sonar.token ${SONAR_API_TOKEN}
          fi
        else
          touch sonar-project.properties
          echo "sonar.projectKey=jeffrey_spring-petclinic_cff26d1c-d76a-4f18-b77d-f82c04279a45" >> sonar-project.properties
          echo "sonar.host.url=${SONAR_HOST_URL}" >> sonar-project.properties
          echo "sonar.token=${SONAR_API_TOKEN}" >> sonar-project.properties
          echo "sonar.sources=." >> sonar-project.properties
          echo "sonar.exclusions=./src/main/resources/**/*" >> sonar-project.properties
          echo "sonar.java.binaries=./target/classes/" >> sonar-project.properties
        fi
        echo "---------------------------"
        cat $(workspaces.supplychain-workspace.path)/sonar-project.properties

    - name: sonar-scan
      image: harbor.h2o-4-23332.h2o.vmware.com/tap/tools/sonar-scanner-cli:5.0.1
      workingDir: $(workspaces.supplychain-workspace.path)
      command:
        - sonar-scanner
    
